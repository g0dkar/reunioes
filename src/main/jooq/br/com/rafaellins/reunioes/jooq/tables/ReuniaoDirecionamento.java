/*
 * This file is generated by jOOQ.
 */
package br.com.rafaellins.reunioes.jooq.tables;


import br.com.rafaellins.reunioes.jooq.Keys;
import br.com.rafaellins.reunioes.jooq.Public;
import br.com.rafaellins.reunioes.jooq.tables.records.ReuniaoDirecionamentoRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ReuniaoDirecionamento extends TableImpl<ReuniaoDirecionamentoRecord> {

    private static final long serialVersionUID = -1317236403;

    /**
     * The reference instance of <code>public.reuniao_direcionamento</code>
     */
    public static final ReuniaoDirecionamento REUNIAO_DIRECIONAMENTO = new ReuniaoDirecionamento();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReuniaoDirecionamentoRecord> getRecordType() {
        return ReuniaoDirecionamentoRecord.class;
    }

    /**
     * The column <code>public.reuniao_direcionamento.reuniao_id</code>.
     */
    public final TableField<ReuniaoDirecionamentoRecord, UUID> REUNIAO_ID = createField(DSL.name("reuniao_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.reuniao_direcionamento.direcionamento_id</code>.
     */
    public final TableField<ReuniaoDirecionamentoRecord, UUID> DIRECIONAMENTO_ID = createField(DSL.name("direcionamento_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * Create a <code>public.reuniao_direcionamento</code> table reference
     */
    public ReuniaoDirecionamento() {
        this(DSL.name("reuniao_direcionamento"), null);
    }

    /**
     * Create an aliased <code>public.reuniao_direcionamento</code> table reference
     */
    public ReuniaoDirecionamento(String alias) {
        this(DSL.name(alias), REUNIAO_DIRECIONAMENTO);
    }

    /**
     * Create an aliased <code>public.reuniao_direcionamento</code> table reference
     */
    public ReuniaoDirecionamento(Name alias) {
        this(alias, REUNIAO_DIRECIONAMENTO);
    }

    private ReuniaoDirecionamento(Name alias, Table<ReuniaoDirecionamentoRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReuniaoDirecionamento(Name alias, Table<ReuniaoDirecionamentoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ReuniaoDirecionamento(Table<O> child, ForeignKey<O, ReuniaoDirecionamentoRecord> key) {
        super(child, key, REUNIAO_DIRECIONAMENTO);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<ForeignKey<ReuniaoDirecionamentoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ReuniaoDirecionamentoRecord, ?>>asList(Keys.REUNIAO_DIRECIONAMENTO__FK_REL_REUNIAO_DIRECIONAMENTO___REUNIAO, Keys.REUNIAO_DIRECIONAMENTO__FK_REL_REUNIAO_DIRECIONAMENTO___DIRECIONAMENTO);
    }

    public Reuniao reuniao() {
        return new Reuniao(this, Keys.REUNIAO_DIRECIONAMENTO__FK_REL_REUNIAO_DIRECIONAMENTO___REUNIAO);
    }

    public Direcionamento direcionamento() {
        return new Direcionamento(this, Keys.REUNIAO_DIRECIONAMENTO__FK_REL_REUNIAO_DIRECIONAMENTO___DIRECIONAMENTO);
    }

    @Override
    public ReuniaoDirecionamento as(String alias) {
        return new ReuniaoDirecionamento(DSL.name(alias), this);
    }

    @Override
    public ReuniaoDirecionamento as(Name alias) {
        return new ReuniaoDirecionamento(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReuniaoDirecionamento rename(String name) {
        return new ReuniaoDirecionamento(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReuniaoDirecionamento rename(Name name) {
        return new ReuniaoDirecionamento(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
