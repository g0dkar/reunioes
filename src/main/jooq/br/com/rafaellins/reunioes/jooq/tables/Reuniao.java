/*
 * This file is generated by jOOQ.
 */
package br.com.rafaellins.reunioes.jooq.tables;


import br.com.rafaellins.reunioes.jooq.Keys;
import br.com.rafaellins.reunioes.jooq.Public;
import br.com.rafaellins.reunioes.jooq.tables.records.ReuniaoRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Reuniao extends TableImpl<ReuniaoRecord> {

    private static final long serialVersionUID = 245760547;

    /**
     * The reference instance of <code>public.reuniao</code>
     */
    public static final Reuniao REUNIAO = new Reuniao();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReuniaoRecord> getRecordType() {
        return ReuniaoRecord.class;
    }

    /**
     * The column <code>public.reuniao.id</code>.
     */
    public final TableField<ReuniaoRecord, UUID> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.reuniao.active</code>.
     */
    public final TableField<ReuniaoRecord, Boolean> ACTIVE = createField(DSL.name("active"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.reuniao.titulo</code>.
     */
    public final TableField<ReuniaoRecord, String> TITULO = createField(DSL.name("titulo"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>public.reuniao.descricao</code>.
     */
    public final TableField<ReuniaoRecord, String> DESCRICAO = createField(DSL.name("descricao"), org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>public.reuniao.data_hora</code>.
     */
    public final TableField<ReuniaoRecord, OffsetDateTime> DATA_HORA = createField(DSL.name("data_hora"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), this, "");

    /**
     * The column <code>public.reuniao.data_hora_criacao</code>.
     */
    public final TableField<ReuniaoRecord, OffsetDateTime> DATA_HORA_CRIACAO = createField(DSL.name("data_hora_criacao"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), this, "");

    /**
     * The column <code>public.reuniao.data_hora_ultima_atualizacao</code>.
     */
    public final TableField<ReuniaoRecord, OffsetDateTime> DATA_HORA_ULTIMA_ATUALIZACAO = createField(DSL.name("data_hora_ultima_atualizacao"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), this, "");

    /**
     * Create a <code>public.reuniao</code> table reference
     */
    public Reuniao() {
        this(DSL.name("reuniao"), null);
    }

    /**
     * Create an aliased <code>public.reuniao</code> table reference
     */
    public Reuniao(String alias) {
        this(DSL.name(alias), REUNIAO);
    }

    /**
     * Create an aliased <code>public.reuniao</code> table reference
     */
    public Reuniao(Name alias) {
        this(alias, REUNIAO);
    }

    private Reuniao(Name alias, Table<ReuniaoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Reuniao(Name alias, Table<ReuniaoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Reuniao(Table<O> child, ForeignKey<O, ReuniaoRecord> key) {
        super(child, key, REUNIAO);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<ReuniaoRecord> getPrimaryKey() {
        return Keys.REUNIAO_PKEY;
    }

    @Override
    public List<UniqueKey<ReuniaoRecord>> getKeys() {
        return Arrays.<UniqueKey<ReuniaoRecord>>asList(Keys.REUNIAO_PKEY);
    }

    @Override
    public Reuniao as(String alias) {
        return new Reuniao(DSL.name(alias), this);
    }

    @Override
    public Reuniao as(Name alias) {
        return new Reuniao(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Reuniao rename(String name) {
        return new Reuniao(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Reuniao rename(Name name) {
        return new Reuniao(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, Boolean, String, String, OffsetDateTime, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
